# -*- coding: utf-8 -*-
"""NLP Experiment_03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-Qe7W8ubF6V09uRssa5nurYajtSR9-3v
"""

import re

# ab[0+]
def one():
    string = input('enter a string ')
    p = re.compile('ab*?')
    m = p.search(string)
    if m:
        print('it\'s a match')
    else:
        print('no match found')

one()

# ab[1+]
def two():
    string = input('enter a string ')
    p = re.compile('ab+?')
    m = p.search(string)
    if m:
        print('it\'s a match')
    else:
        print('no match found')

two()

# lwcase_lwcase
def three():
    string = input('enter a string ')
    p = re.compile('[a-z]*_[a-z]+')
    m = p.search(string)
    if m:
        print('it\'s a match')
    else:
        print('no match found')

three()

# upcase_lwcase
def four():
    string = input('enter a string ')
    p = re.compile('[A-Z][a-z]+')
    m = p.search(string)
    if m:
        print('it\'s a match')
    else:
        print('no match found')

four()

# contain z
def five():
    string = input('enter a string ')
    p = re.compile('.*[zZ].*')
    m = p.search(string)
    if m:
        print('it\'s a match')
    else:
        print('no match found')

five()

# contain z not at start/end
def six():
    string = input('enter a string ')
    p = re.compile('^[^zZ]+[zZ][^zZ]+$')
    m = p.search(string)
    if m:
        print('it\'s a match')
    else:
        print('no match found')

six()

# contain lwcs upcs digit _
def seven():
    string = input('enter a string ')
    p = re.compile('\w')
    m = p.search(string)
    if m:
        print('it\'s a match')
    else:
        print('no match found')

seven()

# 0-9 3len
def eight():
    string = input('enter a string ')
    m = re.search('^([0-9]{1,3})$', string)
    if m:
        print('it\'s a match')
    else:
        print('no match found')

eight()

# literals
def nine():
    string = input('enter a string ')
    m = re.search('cat|dog|fox|horse', string)
    if m:
        print('Words searched: cat|dog|fox|horse \n it\'s a match')
    else:
        print('no match found')

nine()

# - > " " and vv
def ten():
    # string = input('enter a sentence: ')
    string = "asd_as d"
    m = re.sub(' ', '%', string)
    m1 = re.sub('_', '*', m)
    r1 = re.sub('\*', ' ', m1)
    r2 = re.sub('%', '_', r1)
    print(r2)

ten()

# num in str
def eleven():
    string = input('enter a sentence: ')
    print(re.sub('', ' ', string))

eleven()

# start with an a or e
def twelve():
  strings = ["hello", 'aaaaa', "oh hey", "eeee"]

  for string in strings:
    if re.search("^(a|e)",string):
      print(string)
twelve()

# road to rd
def thirteen():
  string = "not my road, It's our road!"

  string = re.sub("road", "rd", string)
  print(string)
thirteen()

# rid of whitespaces
def fourteen():
  string = "what is love? Baby don't hurt me."

  string = re.sub("\s", "", string)
  print(string)
fourteen()

# rid of anything not alphanumeric
def fifteen():
  string = "what is love? Baby don't hurt me."

  string = re.sub("[^a-zA-Z0-9]", "", string)
  print(string)

fifteen()